programação_simples:

Se precondiçoes, then poscondiçoes.

preconditions suporta:
    - "and" condicional
    - "or" condicional
    - "not" condicional
    - "()" para agrupar expressões

poscondiçoes: poscondiçao ("and" poscondiçao)*

Se:

-> OBJETO is ESTADO
-> click OBJETO
-> click not OBJETO
-> click OBJETO depois de EVENTO ter acontecido
-> OBJETO is in use

Então:

-> OBJETO change to ESTADO
-> OBJETO goes to inventory
-> end of game
-> show message TEXTO em POSIÇÃO
-> pede código TEXTO com message TEXTO, se acertar faz EVENTO e se errar faz EVENTO
-> OBJETO change size to TAMANHO
-> OBJETO move to POSIÇÃO
-> change to cena CENA
-> OBJETO é removid(o|a)
-> play SOM


programação_v2:

precondiçoes => poscondiçoes
     {}      =>      {}

preconditions:
    suporta:
        - &&  #"and" condicional
        - ||  #"or" condicional
        - ~   #"not" condicional
        - ()  #agrupar expressões

poscondiçoes: poscondiçao ("&&" poscondiçao)*

precondiçoes:

-> OBJETO@ESTADO                     #OBJETO is ESTADO
-> click(OBJETO)                    #click OBJETO
-> click_not(OBJETO)                #click not OBJETO
-> click_depois(OBJETO, EVENTO)     #click OBJETO depois de EVENTO ter acontecido
-> uso(OBJETO)                       #OBJETO is in use

poscondiçoes:

-> OBJETO@ESTADO                            #OBJETO change to ESTADO
-> OBJETO>>inventário                       #OBJETO goes to inventory
-> fim()                                    #end of game
-> message(TEXTO,POSIÇÃO)                  #show message TEXTO em POSIÇÃO
-> pede_código(TEXTO,TEXTO,EVENTO,EVENTO)   #pede código TEXTO com message TEXTO, se acertar faz EVENTO e se errar faz EVENTO
-> OBJETO>>TAMANHO                          #OBJETO change size to TAMANHO
-> OBJETO>>POSIÇÃO                          #OBJETO move to POSIÇÃO
-> cena.CENA                                #change to cena CENA
-> remove(OBJETO)                           #OBJETO é removid(o|a)
-> play(SOM)                                #play SOM